// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview This file defines a Genkit flow for categorizing websites into relevant sections.
 * It takes a URL as input and returns the categorized section.
 *
 * - categorizeWebsite - A function that categorizes a website URL.
 * - CategorizeWebsiteInput - The input type for the categorizeWebsite function.
 * - CategorizeWebsiteOutput - The return type for the categorizeWebsite function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const CategorizeWebsiteInputSchema = z.object({
  url: z.string().url().describe('The URL of the website to categorize.'),
});
export type CategorizeWebsiteInput = z.infer<typeof CategorizeWebsiteInputSchema>;

const CategorizeWebsiteOutputSchema = z.object({
  category: z.enum([
    'vibeCoding',
    'portfolio',
    'blog',
    'project',
    'other',
  ]).describe('The category the website belongs to.'),
});
export type CategorizeWebsiteOutput = z.infer<typeof CategorizeWebsiteOutputSchema>;

export async function categorizeWebsite(input: CategorizeWebsiteInput): Promise<CategorizeWebsiteOutput> {
  return categorizeWebsiteFlow(input);
}

const categorizeWebsitePrompt = ai.definePrompt({
  name: 'categorizeWebsitePrompt',
  input: {schema: CategorizeWebsiteInputSchema},
  output: {schema: CategorizeWebsiteOutputSchema},
  prompt: `You are an expert website categorizer. Given a URL, you will determine the most appropriate category for the website.

Categories:
- vibeCoding: Websites related to coding communities, live coding, or collaborative coding environments.
- portfolio: Personal portfolio websites showcasing projects and skills.
- blog: Personal or professional blog websites.
- project: Websites dedicated to specific projects, either personal or collaborative.
- other: Any website that does not fit into the above categories.

URL: {{{url}}}

Category:`,
});

const categorizeWebsiteFlow = ai.defineFlow(
  {
    name: 'categorizeWebsiteFlow',
    inputSchema: CategorizeWebsiteInputSchema,
    outputSchema: CategorizeWebsiteOutputSchema,
  },
  async input => {
    const {output} = await categorizeWebsitePrompt(input);
    return output!;
  }
);
